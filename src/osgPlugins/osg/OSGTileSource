/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2009 Pelican Ventures, Inc.
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
#ifndef OSGEARTH_DRIVERS_OSG
#define OSGEARTH_DRIVERS_OSG 1

#include "Export"
#include <osgEarth/Config>
#include <osgEarth/TileSource>
#include <osg/Image>

using namespace osgEarth;

namespace osgEarth { namespace Drivers 
{
    class OSGEARTH_OSGTILESOURCE_EXPORT OSGTileSource : public TileSource
    {
    public:
        OSGTileSource( const PluginOptions* options =0L );
        virtual ~OSGTileSource() { }

    public: // properties

        std::string& url() { return _url; }
        const std::string& url() const { return _url; }

        bool& convertLuminanceToRGBA() { return _convertLuminanceToRGBA; }
        bool convertLuminanceToRGBA() const { return _convertLuminanceToRGBA; }

    public:
        virtual void initialize( const std::string& referenceURI, const Profile* overrideProfile);
        virtual unsigned int getMaxDataLevel() const;
        virtual osg::Image* createImage( const TileKey* key, ProgressCallback* progress);
        virtual std::string getExtension() const;

    protected:
        std::string _url;
        bool _convertLuminanceToRGBA;
        int _tileSize;
        int _maxDataLevel;
        osg::ref_ptr<osg::Image> _image;
    };

} } // osgEarth::Drivers namespace

#endif // OSGEARTH_DRIVERS_OSG
