IF   (DYNAMIC_OSGEARTH)
    ADD_DEFINITIONS(-DOSGEARTH_LIBRARY)
ELSE (DYNAMIC_OSGEARTH)
    ADD_DEFINITIONS(-DOSGEARTH_LIBRARY_STATIC)
ENDIF(DYNAMIC_OSGEARTH)

OPTION(CURL_IS_STATIC "on if curl is a static lib " ON)
MARK_AS_ADVANCED(CURL_IS_STATIC)

#IF(WIN32)
#   SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRT")
#    IF(CURL_IS_STATIC)
#        ADD_DEFINITIONS(-DCURL_STATICLIB)
#        SET(TARGET_EXTERNAL_LIBRARIES ws2_32 winmm wldap32)
#    ENDIF(CURL_IS_STATIC)
#ENDIF(WIN32)

SET(LIB_NAME osgEarth)

SET(HEADER_PATH ${OSGEARTH_SOURCE_DIR}/include/${LIB_NAME})
SET(LIB_PUBLIC_HEADERS
    Caching
	CacheSeed
    Common
    Compositing
    Config
    Cube
    EarthFile
    EarthTerrainTechnique
	EarthTerrain
    Export
    FileUtils
	FileLocationCallback
	FindNode
    GeoData
    HeightFieldUtils
    HTTPClient
    ImageToHeightFieldConverter
    ImageUtils
    JsonUtils
    Locators
    Map
    MapLayer
    MapNode
    MapEngine
    MapEngineProperties
    MaskNode
    ModelLayer
    ModelSource
	MultiPassTerrainTechnique
    Profile
	Progress
    Registry
    SpatialReference
    StringUtils
    TaskService
    TerrainTileEdgeNormalizerUpdateCallback
    TileKey
    TileSource
    TileSourceFactory
    TMS
    VersionedTerrain
    XmlUtils
)

ADD_LIBRARY(${LIB_NAME} SHARED
#    ${OSGEARTH_USER_DEFINED_DYNAMIC_OR_STATIC}
    ${LIB_PUBLIC_HEADERS}
    Caching.cpp
    CacheSeed.cpp
    Compositing.cpp
    Config.cpp
    Cube.cpp
    EarthFile.cpp
    EarthTerrainTechnique.cpp
    FileUtils.cpp
    GeoData.cpp
    HeightFieldUtils.cpp
    HTTPClient.cpp
    ImageToHeightFieldConverter.cpp
    ImageUtils.cpp
    JsonUtils.cpp
    Locators.cpp
    Map.cpp
    MapLayer.cpp
    MapNode.cpp
    MapEngine.cpp
    MapEngineProperties.cpp
    MaskNode.cpp
	MimeTypes.cpp
	ModelLayer.cpp
	ModelSource.cpp
	MultiPassTerrainTechnique.cpp
    Profile.cpp
	Progress.cpp
    Registry.cpp
    SpatialReference.cpp
    TaskService.cpp
    TerrainTileEdgeNormalizerUpdateCallback.cpp
    TileKey.cpp
    TileSource.cpp
    TileSourceFactory.cpp
    TMS.cpp
    Version.cpp
    VersionedTerrain.cpp
    XmlUtils.cpp
)

INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR} ${CURL_INCLUDE_DIR} ${EXPAT_INCLUDE_DIR} ${GDAL_INCLUDE_DIR})

LINK_INTERNAL(${LIB_NAME}     
    osg
    osgUtil
    osgSim
    osgTerrain
    osgDB
    osgFX
    osgViewer
	osgText
	osgGA
    OpenThreads
)

LINK_WITH_VARIABLES(${LIB_NAME} CURL_LIBRARY GDAL_LIBRARY EXPAT_LIBRARY)
#LINK_EXTERNAL(${LIB_NAME} ${TARGET_EXTERNAL_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} ${EXPAT_LIBRARY} )
#LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY})
LINK_CORELIB_DEFAULT(${LIB_NAME})

INCLUDE(ModuleInstall OPTIONAL)
